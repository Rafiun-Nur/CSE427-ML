# -*- coding: utf-8 -*-
"""CSE427 Lab HW01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SyMmPlhKlbnU5Dye_1vblrlE4dv9IBvN
"""

#Numpy Library
import numpy as np
#Task-1
a = np.random.randint(1, 101, 20)
b = np.random.randint(1, 101, 20)
print("Array a: ", a)
print("Array b: ", b)
#Task-2
a = a.reshape(5, 4)
b = b.reshape(5, 4)
print("Matrix a :\n", a)
print("Matrix b :\n", b)
#Task-3
scalar = int(input("Scalar value: "))
a_scaled = a * scalar
b_scaled = b * scalar
print("Scalar multiplication of a:", a_scaled)
print("Scalar multiplication of b:", b_scaled)
#Task-4
b_modified = b.T
c = np.matmul(a, b_modified)
print("Matrix c:", c)
#Task-5
print("Columns 2 and 3 of matrix c:", c[:, 1:3])
print("Whole matrix c using slicing:", c[:, :])
#Task-6
max_value = c.max()
max_row, max_col = 0, 0
for i in range(c.shape[0]):
    for j in range(c.shape[1]):
        if(c[i][j] == max_value):
            max_row, max_col = i, j
print("Largest element:", max_value)
print("Index (row, col):", (max_row, max_col))
#Task-7
c_flattened = c.flatten()
print("Flattened version of c:", c_flattened)
print("Original matrix c remains unchanged:", c)

#Pandas Library
import pandas as pd
#Task-1
df = pd.read_csv('subject_scores.csv')
#Task-2
print("First few rows of the dataset:")
print(df.head())
#Task-3
print("Summarized details of the dataset:")
print(df.describe())
#Task-4
print("Null values in each column:")
print(df.isnull().sum())
#Task-5
subject_columns = ['Physics', 'Chemistry', 'Math', 'Bilogy']
for i in subject_columns:
    column_mean = df[i].mean()
    df[i].fillna(column_mean, inplace=True)
print("Null values after replacement:")
print(df.isnull().sum())
#Task-6
print("Math scores of all students:")
print(df[['Student_ID', 'Math']])

#Matplotlib library
import matplotlib.pyplot as plt
#Task-1
temperature_dhaka = [25, 34, 21, 45, 28, 6, 43, 18, 7, 2]
humidity_dhaka = [28, 25, 29, 20, 26, 50, 19, 29, 52, 55]
plt.scatter(
    temperature_dhaka,
    humidity_dhaka,
    marker='*',
    color='red',
    s=100)
plt.xlabel('Temperature (Â°C)')
plt.ylabel('Humidity (%)')
plt.title('Temperature vs Humidity in Dhaka')
plt.grid(True)
plt.show()
#Task-2
study_hours = [2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 9, 10, 11, 11, 12]
marks = [6, 10, 15, 20, 34, 44, 55, 60, 55, 67, 70, 80, 90, 99, 100]
plt.figure(figsize=(12, 8))
plt.plot(
    study_hours,
    marks,
    marker='o',
    linestyle='-',
    color='blue',
    linewidth=2,
    markersize=8)
plt.xlabel('Study Hours', fontsize=14)
plt.ylabel('Marks (%)', fontsize=14)
plt.title('Study Hours vs Marks Achieved', fontsize=16)
plt.grid(True, linestyle='--', alpha=0.6)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.show()
#Task-3
import numpy as np
subjects = ['Maths', 'English', 'Science', 'Physics', 'Computer']
marks = [89, 90, 45, 78, 99]
colors = ['skyblue', 'lightgreen', 'salmon', 'gold', 'violet']
plt.figure(figsize=(18, 5))
plt.subplot(1, 3, 1)
plt.barh(subjects, marks, color=colors)
plt.xlabel('Marks')
plt.title('Horizontal Bar Graph')
plt.grid(axis='x', linestyle='--')
#Task-4
plt.subplot(1, 3, 2)
bars = plt.bar(subjects, marks, color=colors)
plt.ylabel('Marks')
plt.title('Vertical Bar Graph')
plt.grid(axis='y', linestyle='--')
for i in bars:
    height = i.get_height()
    plt.text(i.get_x() + i.get_width()/2., height,
             f'{height}', ha='center', va='bottom')
#Task-5
plt.subplot(1, 3, 3)
plt.barh(subjects, marks, color=colors, alpha=0.5, label='Horizontal')
x_pos = np.arange(len(subjects))
plt.bar(x_pos + 0.4, marks, color=colors, alpha=0.5, width=0.4, label='Vertical')
plt.yticks(x_pos + 0.2, subjects)
plt.title('Combined View')
plt.legend()
plt.grid(axis='both', linestyle='--')
plt.tight_layout()
plt.show()